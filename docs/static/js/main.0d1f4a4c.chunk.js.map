{"version":3,"sources":["components/TasksList.jsx","components/Form.jsx","App.jsx","index.js"],"names":["TasksList","props","list","tasks","length","className","Form","error","button","edit","type","onSubmit","editTask","handleSubmit","placeholder","value","task","onChange","handleChange","App","useState","setTask","tasksList","setTasksList","setEdit","id","setId","setError","handleClick","filterTasks","filter","item","handleEdit","map","onClick","e","inputValue","target","preventDefault","trim","shortid","generate","editedArray","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAwBeA,EArBG,SAACC,GAEjB,IAAMC,EACmB,IAAvBD,EAAME,MAAMC,OACV,oBAAIC,UAAU,kBAAd,gCAEAJ,EAAME,MAGV,OACE,sBAAKE,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,aAAd,SAA4BH,QCgCnBI,EA5CF,SAACL,GAEZ,IAAMM,EAAQN,EAAMM,MAClB,sBAAMF,UAAU,cAAhB,SAA+BJ,EAAMM,QACnC,KAGEC,EAASP,EAAMQ,KACnB,wBAAQJ,UAAU,mCAAmCK,KAAK,SAA1D,kBAIA,wBAAQL,UAAU,gCAAgCK,KAAK,SAAvD,iBAKF,OACE,sBAAKL,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BJ,EAAMQ,KAAO,YAAc,aACxD,uBAAME,SAAUV,EAAMQ,KAAOR,EAAMW,SAAWX,EAAMY,aAApD,UACE,uBACEH,KAAK,OACLI,YAAY,WACZC,MAAOd,EAAMe,KACbX,UAAU,oBACVY,SAAUhB,EAAMiB,eAEjBX,EACAC,SCgFMW,MA1Gf,WAEE,MAAwBC,mBAAS,IAAjC,mBAAOJ,EAAP,KAAaK,EAAb,KACA,EAAkCD,mBAAS,IAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAwBH,oBAAS,GAAjC,mBAAOX,EAAP,KAAae,EAAb,KACA,EAAoBJ,mBAAS,IAA7B,mBAAOK,EAAP,KAAWC,EAAX,KACA,EAA0BN,mBAAS,MAAnC,mBAAOb,EAAP,KAAcoB,EAAd,KA0BMC,EAAc,SAACH,GAEnB,IAAMI,EAAcP,EAAUQ,QAAO,SAACC,GAAD,OAAUA,EAAKN,KAAOA,KAC3DF,EAAaM,GACbF,EAAS,OAGLK,EAAa,SAACD,GAClBP,GAAQ,GACRH,EAAQU,EAAKf,MACbU,EAAMK,EAAKN,IACXE,EAAS,OAwBLxB,EAAQmB,EAAUW,KAAI,SAACF,GAAD,OAC1B,qBAAI1B,UAAU,kBAAd,UACE,sBAAMA,UAAU,OAAhB,SAAwB0B,EAAKf,OAC7B,wBACEX,UAAU,uCACV6B,QAAS,kBAAMN,EAAYG,EAAKN,KAFlC,oBAMA,wBACEpB,UAAU,mCACV6B,QAAS,kBAAMF,EAAWD,IAF5B,oBARmCA,EAAKN,OAiB5C,OACE,sBAAKpB,UAAU,iBAAf,UACE,oBAAIA,UAAU,cAAd,wBACA,uBACA,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,CAAWF,MAAOA,IAClB,cAAC,EAAD,CACEa,KAAMA,EACNP,KAAMA,EACNF,MAAOA,EACPW,aAtFa,SAACiB,GACpB,IAAMC,EAAaD,EAAEE,OAAOtB,MAC5BM,EAAQe,IAqFFvB,aAlFa,SAACsB,GACpBA,EAAEG,iBAGGtB,EAAKuB,QAOVhB,EAAa,GAAD,mBAAKD,GAAL,CAAgB,CAAEG,GAAIe,IAAQC,WAAYzB,KAAMA,MAG5DK,EAAQ,IACRM,EAAS,OAVPA,EAAS,uCA8ELC,YAAaA,EACbI,WAAYA,EACZpB,SArDS,SAACuB,GAIhB,GAHAA,EAAEG,iBAGGtB,EAAKuB,OAAV,CAMA,IAAMG,EAAcpB,EAAUW,KAAI,SAACF,GAAD,OAChCA,EAAKN,KAAOA,EAAK,CAAEA,GAAIA,EAAIT,KAAMA,GAASe,KAE5CR,EAAamB,GACblB,GAAQ,GACRH,EAAQ,IACRK,EAAM,IACNC,EAAS,WAZPA,EAAS,gDCpDfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0d1f4a4c.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TasksList = (props) => {\n  // render error or tasks list\n  const list =\n    props.tasks.length === 0 ? (\n      <li className=\"list-group-item\">There are no tasks</li>\n    ) : (\n      props.tasks\n    );\n\n  return (\n    <div className=\"col-8\">\n      <h4 className=\"text-center\">Tasks</h4>\n      <ul className=\"list-group\">{list}</ul>\n    </div>\n  );\n};\n\nTasksList.propTypes = {\n  task: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default TasksList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Form = (props) => {\n  //render error message\n  const error = props.error ? (\n    <span className=\"text-danger\">{props.error}</span>\n  ) : null;\n\n  // change button action\n  const button = props.edit ? (\n    <button className=\"btn btn-warning btn-block col-12\" type=\"submit\">\n      Edit\n    </button>\n  ) : (\n    <button className=\"btn btn-dark btn-block col-12\" type=\"submit\">\n      Add\n    </button>\n  );\n\n  return (\n    <div className=\"col-4\">\n      <h4 className=\"text-center\">{props.edit ? \"Edit Task\" : \"Add Task\"}</h4>\n      <form onSubmit={props.edit ? props.editTask : props.handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Add task\"\n          value={props.task}\n          className=\"form-control mb-2\"\n          onChange={props.handleChange}\n        />\n        {error}\n        {button}\n      </form>\n    </div>\n  );\n};\n\nForm.propTypes = {\n  task: PropTypes.string.isRequired,\n  edit: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  handleChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  editTask: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React, { useState } from \"react\";\nimport shortid from \"shortid\";\n\nimport TasksList from \"./components/TasksList\";\nimport Form from \"./components/Form\";\n\nfunction App() {\n  // state\n  const [task, setTask] = useState(\"\");\n  const [tasksList, setTasksList] = useState([]);\n  const [edit, setEdit] = useState(false);\n  const [id, setId] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  // events\n  const handleChange = (e) => {\n    const inputValue = e.target.value;\n    setTask(inputValue);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // validate if user has written a text in the input\n    if (!task.trim()) {\n      setError(\"Please, don't forget to add a task\");\n      return;\n    }\n\n    // add tasks to the array\n    // use shortid library to create a random id with generate() method\n    setTasksList([...tasksList, { id: shortid.generate(), task: task }]);\n\n    // clear input and errors\n    setTask(\"\");\n    setError(null);\n  };\n\n  const handleClick = (id) => {\n    // create a new array filtering items that have been clicked\n    const filterTasks = tasksList.filter((item) => item.id !== id);\n    setTasksList(filterTasks);\n    setError(null);\n  };\n\n  const handleEdit = (item) => {\n    setEdit(true);\n    setTask(item.task);\n    setId(item.id);\n    setError(null);\n  };\n\n  const editTask = (e) => {\n    e.preventDefault();\n\n    // validate if user has written a text in the input\n    if (!task.trim()) {\n      setError(\"Please, don't forget to add a task\");\n      return;\n    }\n\n    // edit and save clicked tasks\n    const editedArray = tasksList.map((item) =>\n      item.id === id ? { id: id, task: task } : item\n    );\n    setTasksList(editedArray);\n    setEdit(false);\n    setTask(\"\");\n    setId(\"\");\n    setError(null);\n  };\n\n  // render tasks list\n  const tasks = tasksList.map((item) => (\n    <li className=\"list-group-item\" key={item.id}>\n      <span className=\"lead\">{item.task}</span>\n      <button\n        className=\"btn btn-danger btn-sm float-end mx-2\"\n        onClick={() => handleClick(item.id)}\n      >\n        Delete\n      </button>\n      <button\n        className=\"btn btn-warning btn-sm float-end\"\n        onClick={() => handleEdit(item)}\n      >\n        Edit\n      </button>\n    </li>\n  ));\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"text-center\">Tasks List</h1>\n      <hr />\n      <div className=\"row\">\n        <TasksList tasks={tasks} />\n        <Form\n          task={task}\n          edit={edit}\n          error={error}\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n          handleClick={handleClick}\n          handleEdit={handleEdit}\n          editTask={editTask}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}